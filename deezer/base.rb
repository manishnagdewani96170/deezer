module Deezer

  class Base
   	 def initialize(options = {})
      @href          = options['href']
      @id            = options['id']
      @type          = options['type']
      @uri           = options['uri']
    end

    ##Check method is missing 
    def method_missing(method_name, *args)
      attr = "@#{method_name}"
      super unless instance_variable_defined? attr

      attr_value = instance_variable_get attr
      return attr_value if !attr_value.nil? || @id.nil?

      complete!
      instance_variable_get attr
    end

    # Overrides Object#respond_to? to also consider methods dynamically generated by {#method_missing}
    ##Check object know existing method before call 
    def respond_to?(method_name, include_private_methods = false)
      attr = "@#{method_name}"
      return true if instance_variable_defined? attr
      super
    end
  
  end
end   	